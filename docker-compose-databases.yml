version: '3.8'

services:
  postgresql:
    image: postgres:15
    container_name: postgresql_db
    environment:
      POSTGRES_DB: observability_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./init-scripts/postgresql:/docker-entrypoint-initdb.d
    networks:
      - db_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d observability_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  mock-redshift:
    image: postgres:15
    container_name: mock_redshift_db
    environment:
      POSTGRES_DB: redshift_db
      POSTGRES_USER: redshift_user
      POSTGRES_PASSWORD: redshift123
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5439:5432"
    volumes:
      - redshift_data:/var/lib/postgresql/data
      - ./init-scripts/redshift:/docker-entrypoint-initdb.d
    networks:
      - db_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U redshift_user -d redshift_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB

volumes:
  postgresql_data:
    driver: local
  redshift_data:
    driver: local

networks:
  db_network:
    driver: bridge